<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数値解析 on Chanomic Blog</title>
    <link>https://bombrary.github.io/blog/tags/%E6%95%B0%E5%80%A4%E8%A7%A3%E6%9E%90/</link>
    <description>Recent content in 数値解析 on Chanomic Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 28 May 2020 10:50:13 +0900</lastBuildDate>
    <atom:link href="https://bombrary.github.io/blog/tags/%E6%95%B0%E5%80%A4%E8%A7%A3%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Eular法とRunge-Kutta法をPythonで実装する</title>
      <link>https://bombrary.github.io/blog/posts/eular_runge-kutta/</link>
      <pubDate>Thu, 28 May 2020 10:50:13 +0900</pubDate>
      <guid>https://bombrary.github.io/blog/posts/eular_runge-kutta/</guid>
      <description>備忘のために。数値解析関連の話はほとんど学んだことがないため、何か間違いがあるかも。&#xA;Eular法 以下、例に出そうとしている微分方程式が運動方程式なので、文字の使い方を力学っぽくしている(位置、速度、時間を $x, v, t$ みたいな気持ちで書いている)。&#xA;導出(1階) まず次の常微分方程式がある。&#xA;\[ \frac{dx}{dt} = f(t, x) \]&#xA;上の式を以下のように近似する。$h$を十分小さくすれば、微分の定義より上の式に近づく。&#xA;\[ \begin{aligned} \frac{x(t + h) - x(t)}{h} \simeq f(t, x) \\ \Rightarrow x(t + h) \simeq x(t) + f(t, x)h \end{aligned} \]&#xA;これが、$x(t)$の更新式となっている。つまり、ある時刻$t_0$における値$x_0 = x(t_0)$を決めておけば、&#xA;\[ \begin{aligned} &amp;amp; t_k := t_{k-1} + h\\ \end{aligned} \]&#xA;とおいて、&#xA;\[ \begin{aligned} &amp;amp; x(t_1) := x(t_0) + f(t_0, x_0)h \\ &amp;amp; x(t_2) := x(t_1) + f(t_1, x_1)h \\ &amp;amp; x(t_3) := x(t_2) + f(t_2, x_2)h \\ &amp;amp; &amp;hellip; \end{aligned} \]</description>
    </item>
  </channel>
</rss>
