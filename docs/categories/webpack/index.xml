<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>webpack on Chanomic Blog</title>
    <link>https://bombrary.github.io/blog/categories/webpack/</link>
    <description>Recent content in webpack on Chanomic Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 19 Mar 2020 09:44:48 +0900</lastBuildDate>
    
	<atom:link href="https://bombrary.github.io/blog/categories/webpack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>webpackに入門する - p5.jsの開発環境作り</title>
      <link>https://bombrary.github.io/blog/posts/webpack-intro-p5/</link>
      <pubDate>Thu, 19 Mar 2020 09:44:48 +0900</pubDate>
      
      <guid>https://bombrary.github.io/blog/posts/webpack-intro-p5/</guid>
      <description>webpackを利用してp5.jsの開発環境を作り、ボールが弾むプログラムを作成する。
動機 ふとしたきっかけで久々にp5.jsを触りたくなった。
昔使っていたときは、p5.jsのファイルをダウンロードしてscriptタグに直接指定することで書いていた。しかし最近、Vue.jsのガイドを読んでいてwebpackの存在を知った。名前は知っていたのだが、具体的に何をするためのものなのかはよく分かっていなかったので調べた。
webpackとは 以下、個人的に調べた限りの理解を書く。
Conceptによれば、webpackとは&amp;quot;module bundler&amp;quot;の一種。bundleという意味から、「複数のモジュールを一つに束ねるツール」だと予想できる。JSのプログラムを、モジュールとして複数の単位に分割して開発する。それを一つのファイルにまとめ上げてくれるのがwebpack。
例えばp5.jsで、ボールが弾むだけのプログラムを書こう、と思った場合、
 ボールを管理するモジュールをBall.jsに書く スケッチを管理するモジュールをsketch.jsに書く メインの処理をindex.jsに書く  みたいにモジュールを分けられる。
ただし、モジュールを扱うための機能であるimport/export文はES2015の仕様で標準採用され、多くのブラウザで実装されている。じゃあwebpackの他の強みは何かというと、おそらく「JS以外のファイルもまとめてくれる点」だと思う。例えばcssやsassのファイルもJSに埋め込むことができる。TypeScriptやJSXのファイルもwebpackでまとめられる。ただしwebpackの核の機能はあくまでJSのモジュールをまとめることなので、JS以外のファイルはloaderと呼ばれる変換器を通しておく必要がある。とはいえ、「このファイルはこのloaderに通してね」というのをあらかじめ設定ファイルに書いておけば、少ないコマンドで変換からbundleまでやってくれるので、便利である。
今回はp5.jsの開発環境づくりのためにwebpackを用意するのだが、JSのモジュールしか扱うつもりはない。なのでwebpackの恩恵は少ないかもしれない。しかし練習として使ってみる。
webpackの導入と動作確認 まず適当にプロジェクト用のディレクトリを作る。npmでプロジェクトを初期化する。
$ mkdir p5-sandbox $ cd p5-sandbox $ npm init -y  以下、このプロジェクトのルートディレクトリを/で表す。
webpack本体を入れる。webpackをコマンドラインから実行するためにはwebpack-cliが必要なので、それも入れる。個人で使う分にはどうでもよいと思うが、これらは開発のみに利用されるパッケージなので、--save-devをつけておく。
$ npm install webpack webpack-cli --save-dev  ディレクトリの作成 今回は次のようにする。
 ソースコードは/src/index.jsに書く。 bundle後のファイルは/public/js/bundle.jsとして出力されるようにする。  あらかじめディレクトリを作成しておく。
$ mkdir src $ mkdir -p public/js  index.jsの作成 /src/index.jsを作成。動作確認のため適当に書く。
console.log(&amp;#34;Hello, World&amp;#34;); webpackの設定 /webpack.config.jsを作成する。
const path = require(&amp;#39;path&amp;#39;); module.exports = { mode: &amp;#39;development&amp;#39;, entry: &amp;#39;.</description>
    </item>
    
  </channel>
</rss>