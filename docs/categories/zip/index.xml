<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>zip on Chanomic Blog</title>
    <link>https://bombrary.github.io/blog/categories/zip/</link>
    <description>Recent content in zip on Chanomic Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 04 Mar 2020 13:50:16 +0900</lastBuildDate><atom:link href="https://bombrary.github.io/blog/categories/zip/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>zipファイルの構造を少しだけ理解する</title>
      <link>https://bombrary.github.io/blog/posts/zip-format-report/</link>
      <pubDate>Wed, 04 Mar 2020 13:50:16 +0900</pubDate>
      
      <guid>https://bombrary.github.io/blog/posts/zip-format-report/</guid>
      <description>Unix系のコマンド(od、grep)だけを使って、zipファイルの中身をのぞく。
zip形式の参考サイト zipの仕様書はZIP File Format Specificationで確認できる。ページ内検索をかけながら必要なところをつまんでいく、という読み方が良さそう。
日本語ならWikipediaがある。こちらは図が書かれているし日本語なので分かりやすい。
zipファイルの用意 まずはzipファイルを用意する。
foo.txtとbar.txtを用意する。
$ echo &#34;Hello, World.&#34;  foo.txt $ echo &#34;Good Bye.&#34;  bar.txt  これらをzipコマンドでまとめる。
$ zip tmp.zip foo.txt bar.txt  バイナリ形式で出力 zipファイルはテキストとして表示できるものではなく、バイナリとして表示しないとあまり意味を掴めない。バイナリ表示ができるテキストエディタを使ってもよいが、ここではodコマンドを用いる。
$ od -Ax -tx1z tmp.zip  引数の意味は以下の通り。man odでも確認できる。
 -A: アドレスの基数(Address-radix)。出力時、最も左の値がファイル先頭から何バイト目なのかを表示する。続けてxと書くと、16進数(hex)で出力する。 -t: データの出力形式(おそらくtypeの略)。  続けてx1と書くと、1バイト区切りの16進数で出力する。 続けてzと書くと、右側にテキストでの表示を添える。ただし表示されるのはASCIIコードで認識される文字のみ。    結果は以下のようになる。
000000 50 4b 03 04 0a 00 00 00 00 00 28 70 64 50 4b 82 PK........(pdPK.p3............foo.txtUT....6_^.6_^ux.............Hello, World.</description>
    </item>
    
  </channel>
</rss>
